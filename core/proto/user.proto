// go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2@latest
// go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway@latest

syntax = "proto3";

package proto;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/Alter17Ego/authopia/core/proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "Simple Bank API",
        version: "1.2",
        contact: {
            name: "Tech School",
            url: "https://github.com/techschool",
            email: "techschool.guru@gmail.com"
        }
    }
};

message UserRegisterRequest {
    string email = 1;
    string password = 2;
    string name = 3;
    string phoneNumber = 4;
}

message UserLoginRequest{
    string username = 1;
    string password = 2;
    string clientId = 3;
}

message Token {
    string accessToken = 1;
    string refreshToken = 2;
}

message AuthResponse {
    Token result = 1;
    string timeIn = 2;
}

service UserService {

    rpc Register(UserRegisterRequest) returns (AuthResponse) {
        option (google.api.http) = {
            post: "/api/auth/register",
            body: "*"
        };
         option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new user",
            summary: "Create new user"
        };
    }

    rpc Login(UserLoginRequest) returns(AuthResponse) {
        option (google.api.http) = {
            post: "/api/auth/login",
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to login user and get access token & refresh token",
            summary: "Login user"
        };
    }
}
